name: Frontend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'

jobs:
  test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: frontend

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Cache node modules
      uses: actions/cache@v3
      id: npm-cache
      with:
        path: |
          frontend/node_modules
          ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      if: steps.npm-cache.outputs.cache-hit != 'true'
      run: npm ci

    - name: Run ESLint
      run: npm run lint

    - name: Run TypeScript type checking
      run: npm run type-check

    - name: Run tests
      run: npm run test:ci
      env:
        CI: true

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./frontend/coverage
        flags: frontend
        name: frontend-coverage

  build:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: frontend

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Cache node modules
      uses: actions/cache@v3
      id: npm-cache-build
      with:
        path: |
          frontend/node_modules
          ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      if: steps.npm-cache-build.outputs.cache-hit != 'true'
      run: npm ci

    - name: Build
      run: npm run build
      env:
        CI: true
        REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: false
        tags: sports-center-frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
